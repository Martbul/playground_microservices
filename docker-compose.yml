version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: playground_microservices
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: microstore
    ports:
      - "5432:5432"
    volumes:
     - postgres_data:/var/lib/postgresql/data
     - ./scripts/init/:/docker-entrypoint-initdb.d/
    networks:
      - microstore-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: microstore-auth-service
    environment:
      - PORT=8081
      - DATABASE_URL=postgres://postgres:password@postgres:5432/auth_db?sslmode=disable
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRATION_HOURS=24
      - REFRESH_TOKEN_EXP_DAYS=30
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microstore-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8081"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Product Service
  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    container_name: microstore-product-service
    environment:
      - PORT=8082
      - DATABASE_URL=postgres://postgres:password@postgres:5432/product_db?sslmode=disable
      - AUTH_SERVICE=auth-service:8081
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microstore-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8082"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: microstore-api-gateway
    environment:
      - PORT=8080
      - AUTH_SERVICE=auth-service:8081
      - PRODUCT_SERVICE=product-service:8082
      - CLIENT_URL=http://localhost:8083
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - product-service
    networks:
      - microstore-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Client Service (Frontend)
  client-service:
    build:
      context: ./services/client-service
      dockerfile: Dockerfile
    container_name: microstore-client-service
    environment:
      - PORT=8083
      - API_GATEWAY_URL=http://api-gateway:8080
      - SESSION_SECRET=your-super-secret-session-key-change-in-production
    ports:
      - "8083:8083"
    depends_on:
      - api-gateway
    networks:
      - microstore-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  microstore-network:
    driver: bridge